{
    "instruction": "Assuming you are an online local business recommender, your task is to help user find local businesses they want to go next based on their interests. To effectively recommend local businesses, you should follow three steps: Thought, Action, Observation. During the Thought step, your objective is to consider how to make the final local business list match the user's perference, and decide the best course of action. If the local business list is good enough or no better action, you will finish early with the candidate local business list.\n For the Action step, you have three options: \n Retrieve[attribute, $K]: Retrieve the top $K local businesses with the Recommender system/LLM based on a specific attribute. The retrieve attribute coule be one of the (None, categories, city, stars).\n Rerank[attribute, $K]: Return the most suitable top $K reranked local businesses in descending order based on the retrieved local business list and user history. The rerank action is used to organize the retrieved movies and is usually executed before Finish. The rerank attribute could be anything you think might help(e.g., None, city, categories, popularity, reputation, etc).\n Finish[list]: Return the candidate local business list and complete the task. If the final length of the local business list is smaller than our task, you should add the user's suitable retrieved local businesses to pad the Finish list. Please don't contain the user's historical local businesses.\n To make recommendations, you'll need to use the user's historical records of local business consumption, include the local business name, categories, ID, city, and the user's rating out of 5. As for User History, the most recently visited local business is the last local business.\n",
    "task": "Task: Top 10 businesses.\n",
    "user_pattern": "User History: ",
    "item_pattern": "ID {iid}, {name}, located in {city}, category is {genre}, ",
    "score_pattern": "{score} stars.\n",
    "knowledge_instruction": "Assuming you are an online local business recommender with access to various data such as city, categories, popularity, and reputation, etc. your task is to reorganize the given list of local businesses. The CRS is conventional recommender system, and LLM means large Language model. Please think step by step. As for User History, the most recently visited local business is the last local business.\n",
    "crs_k": "Here are the top {topK} local business ID, business name, and the recommendation confidence score from the recommender system with {attribute} attribute.\n```{rec_list}```\n",
    "rerank_k": "Here are the top {topK} local business ID, business name and the rerank confidence score from the reranking with {attribute} attribute. \n```{rec_list}```\n",
    "rerank_output": "Please rerank the above {before_topK} recommended local businesses by measuring the possibilities that user would like to visit next most according to the {rerank_type} attribute and the given local businesses history records, and output top **{after_topK}** local businesses except user's historical local businesses. Please only output the local business ID, business name and the rerank confidence score after ranking.\nOutput:\n",
    "rerank_default": "Please rerank the above {before_topK} local businesses by measuring the possibilities that user would like to visit next most, according to the given local business history records, and output top **{after_topK}** local businesses except user's historical local businesses. Please only output the local business ID, business name and the rerank confidence score after ranking.\nOutput:\n",
    "knowledge_instruction_2": "Assuming you are an online local business recommender with access to various data such as city, categories, popularity, and reputation, your task is to reorganize the given list of local businesses. As for User History, the most recently visited local business is the last local business.\n",
    "rerank_default_2": "Please rerank the above {before_topK} local businesses by measuring the possibilities that user would like to visit next most, according to the user history. Please think step by step. Please select top **{after_topK}** local businesses except user's historical local businesses, don't contain any text explanation. Please only output the local business ID, business name and the rerank confidence score after ranking and don't contain any introduction or description, the output structure needs to be consistent with ```<ID_1>, Name1, score1\n<ID_2>, Name2, score2\n ... <ID_10>, Name1, score1\n```, e.g., ```<8>, GoodLife Fitness, 9.5\n<16>, Don Taco, 8.9\n```, {after_topK} local businesses in all.\nOutput:\n",
    "rerank_output_2": "Please rerank the above {before_topK} local businesses by measuring the possibilities that user would like to visit next most, according to the user history and the {rerank_type} attribute. Please think step by step. Please select top **{after_topK}** local businesses except user's historical local businesses, don't contain any text explanation. Please only output the local business ID, business name and the rerank confidence score after ranking and don't contain any introduction or description, the output structure needs to be consistent with ```<ID_1>, Name1, score1\n<ID_2>, Name2, score2\n ... <ID_10>, Name1, score1\n```, e.g., ```<8>, GoodLife Fitness, 9.5\n<16>, Don Taco, 8.9\n```, {after_topK} local businesses in all.\nOutput:\n",
    "rerank_remin": "I've went the following local businesses in the past in order:\n {user_history}\n\n Now there are {before_topK} candidate local businesses that I can go next:\n{candidate_items} \n Please rank these {before_topK} local businesses by measuring the possibilities that I would like to go next most, according to my  history. Please think step by step.\n Note that my most recently local business is {recent_item}. Please output your top ranking **{after_topK}** results with the structure in ```[<ID1>, Name1\n<ID2>, Name2, ...]```. Please don't contain any text explanation. You MUST rank the given candidate local businesses. You can not generate local businesses that are not in the given candidate list.\n Output:\n",
    "plan_task": "Task: Top 10 businesses.\nPlan:\n",
    "chatRec_instruction": "I want you to recommend local business to a user based on some personal information and historical records of local businesses.\nThe historical records includes the local businesses ID, name, city, category and how many points he/she scored out of 5. The higher the score, the more he likes the local business. You are encouraged to learn his local business prefereen from the local businesses he have visited.\n",
    "chatRec_rerank": "Here's a list of candidate local businesses that he is likely to like: ```{candidate_list}```\nPlease select top **10** local businesses in the list that is most likely to be liked except user's historical local businesses.\nPlease only output the local business ID, local business name and the rerank confidence score after ranking and don't contain any introduction or description, the output structure needs to be consistent with ```[<ID_1>, Name1, score1\n<ID_2>, Name2, score2\n ... <ID_10>, Name1, score1\n]```.\nOutput:\n",
    "knowledge_instruction_sigir": "Assuming you are an online local business recommender with access to various data such as city, categories, popularity, and reputation, your task is to reorganize the given list of local businesses. Please think step by step. As for User History, the most recently visited local business is the last local business.\n",
    "rerank_sigir": "Please rerank the above local businesses and output {after_topK} local businesses by measuring the possibilities that user would like to visit next most, according to the user history. Please think step by step. Please select top **{after_topK}** local businesses except user's historical local businesses, don't contain any text explanation. Please only output the local business ID, business name and the rerank confidence score after ranking and don't contain any introduction or description, the output structure needs to be consistent with ```<ID_1>, Name1, score1\n<ID_2>, Name2, score2\n ... <ID_10>, Name1, score1\n```, **{after_topK}** local businesses in all.\nOutput:\n",
    "crs_sigir": "Here are the top {topK} local business ID, business name and the recommendation confidence score from the recommender system.\n```{rec_list}```\n"
}